= form_for [@project, @merge_request], html: { class: "#{controller.action_name}-merge-request form-horizontal" } do |form_helper|
  -if @merge_request.errors.any?
    .alert.alert-error
      %ul
        - @merge_request.errors.full_messages.each do |msg|
          %li= msg

  %fieldset
    %legend 1. Select Branches

    .row
      .span5
        .mr_branch_box
          %h5.cgray From
          .body
            .padded= form_helper.select(:source_project_id,[[@project.path_with_namespace,@project.id]] , {}, {class: 'source_project chosen span4'})
            .padded= form_helper.select(:source_branch, @repository.heads.map(&:name), { include_blank: "Select branch" }, {class: 'source_branch chosen span4'})
        .mr_source_commit

      .span2
        %center= image_tag "merge.png", class: 'mr_direction_tip'
      .span5
        .mr_branch_box
          %h5.cgray To
          .body
            - projects =  !@project.forked_from_project.nil? ? [ @project,@project.forked_from_project] : [@project]
            - @target_branches = [] #!@project.forked_from_project.nil? ? @project.repository.heads.concat(@project.forked_from_project.repository.heads) : @project.repository.heads
            .padded= form_helper.select(:target_project_id, projects.map { |proj| [proj.path_with_namespace,proj.id] }, {include_blank: "Select Target Project" }, {class: 'target_project chosen span4'})
            .padded= form_helper.select(:target_branch, [], { }, {class: 'target_branch chosen span4'})
        .mr_target_commit

  %fieldset
    %legend 2. Fill info

    .ui-box.ui-box-show
      .ui-box-head
        .clearfix
          = form_helper.label :title do
            %strong= "Title *"
          .input= form_helper.text_field :title, class: "input-xxlarge pad js-gfm-input", maxlength: 255, rows: 5, required: true
      .ui-box-body
        .clearfix
          .left
            = form_helper.label :assignee_id do
              %i.icon-user
              Assign to
            .input= form_helper.select(:assignee_id, @project.users.all.collect {|p| [ p.name, p.id ] }, { include_blank: "Select user" }, {class: 'chosen span3'})
          .left
            = form_helper.label :milestone_id do
              %i.icon-time
              Milestone
            .input= form_helper.select(:milestone_id, @project.milestones.active.all.collect {|p| [ p.title, p.id ] }, { include_blank: "Select milestone" }, {class: 'chosen'})

  .control-group

  .form-actions
    - if @merge_request.new_record?
      = form_helper.submit 'Submit merge request', class: "btn btn-create"
    -else
      = form_helper.submit 'Save changes', class: "btn btn-save"
    - if @merge_request.new_record?
      = link_to project_merge_requests_path(@project), class: "btn btn-cancel" do
        Cancel
    - else
      = link_to project_merge_request_path(@project, @merge_request), class: "btn btn-cancel" do
        Cancel

:javascript
  $(function(){
    disableButtonIfEmptyField("#merge_request_title", ".btn-save");

    var source_branch = $("#merge_request_source_branch")
      , target_branch = $("#merge_request_target_branch")
      , target_project = $("#merge_request_target_project_id");

    $.get("#{branch_from_project_merge_requests_path(@project)}", {ref: source_branch.val() });
    $.get("#{branch_to_project_merge_requests_path(@project)}", {target_project_id: target_project.val(),ref: target_branch.val() });
    $.get("#{update_branches_project_merge_requests_path(@project)}", {target_project_id: target_project.val() });


    source_branch.live("change", function() {
      $.get("#{branch_from_project_merge_requests_path(@project)}", {ref: $(this).val() });
    });

    target_branch.live("change", function() {
      $.get("#{branch_to_project_merge_requests_path(@project)}", {target_project_id: target_project.val(),ref: $(this).val() });
    });

    target_project.live("change", function() {
      $.get("#{update_branches_project_merge_requests_path(@project)}", {target_project_id:  $(this).val() });
    });
  });


